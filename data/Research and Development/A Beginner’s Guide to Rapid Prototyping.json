{"id": "1508254", "text": "Photo by \nDenise Jans\n on \nUnsplash\nThe process of going from an idea to a product is a messy one. Learning how to \nprototype\n your idea, getting \nfeedback,\n and \niterating\n on it is the most critical skill anyone aspiring to build their own products should have. This is also one of the most significant parts of a UX Designer\u2019s job.\nPrototypes come in many forms, from a rough sketch on paper to an interactive simulation that looks like the final product. This guide is for complete beginners who want to understand what Prototyping is all about.\nWe\u2019ll cover the meaning of a few terms related to rapid prototyping as well as the following:\nWhat is Rapid Prototyping?\nRapid Prototyping\n is an iterative process used to visualize what a website or an application will look like in order to get feedback and validation from users, stakeholders, developers, and designers.\nWhen used well, rapid prototyping will improve the quality of your designs by enhancing communication between the various parties and reducing the risk of building something that no one wants.\nWhat do you need to prototype?\nA prototype is not designed to be a fully functional version of a system, but is only meant to help visualize the user experience of the final product. As Google Ventures design partner Daniel Burka says:\nThe ideal prototype should be \u201cGoldilocks quality.\u201d If the quality is too low, people won\u2019t believe the prototype is a real product. If the quality is too high, you\u2019ll be working all night, and you won\u2019t finish. You need Goldilocks quality. Not too high, not too low, but just right.\nYou can prototype not just screens, apps, or websites, but almost anything. Prototyping is an excellent method to test the following (examples provided):\nNew functionalities:\n Prototype Instagram Stories in the Instagram app (before they were launched)\nChanges in a workflow:\n Prototype Medium\u2019s new publishing flow after the introduction of paid memberships\nNew technology:\n Prototype a self-driving car journey!\nNew interface:\n Prototype Apple Watch interface (when it first launched)\nSo, now you understand what rapid prototyping is for. But how do you do it? We\u2019ll cover that next.\nThe Rapid Prototyping Process\nRapid Prototyping involves a three-step process, repeated as many times as needed:\nPrototype: \nCreate a visual mock-up of your solution or interface.\nReview: \nShare the prototype with users and evaluate if it meets their needs and expectations.\nRefine: \nBased on this feedback, identify areas that need to be improved or clarified.\nPrototype, Review, Refine, Repeat.\nA prototype will usually start with a very simple mock-up of key areas and become more complex with each iteration as you gather more data from user feedback.\nHow much should you include in your prototype?\nFocus on the critical functions that will be used most often. The point of rapid prototyping is to show how a feature will work or what the design will look like without prototyping the entire product in detail. Remember, we\u2019re aiming for the \nGoldilocks quality\n!\nPrototype one \nUser Flow\n at a time.\n Instead of going screen by screen, base your prototype on a story that will take the user through the areas that you want to prototype. This way, you will get more accurate feedback because your prototype will reflect real life scenarios. For instance, prototype the \u201csign-up/sign-in/reset password\u201d flow together.\nAlso, remember to have an \niteration plan\n in mind. A good rule of thumb when planning iterations is to start broad and then work your way towards a more detailed version of the solution. As you iterate, the \nfidelity\n of your prototypes, as well as how much you include in them, will increase.\nBut wait, what is this fidelity?\nWhat is meant by the fidelity of a prototype?\nFidelity refers to how closely a prototype matches the final product or solution. You can choose from a lot of different options and levels of accuracy, depending on the stage of the process and the goal of the prototype.\nVisual (Sketched vs. Styled)\nLayout and design are the most noticeable aspects of a prototype\u2019s fidelity. If a prototype is produced with a high level of visual fidelity from the beginning, users will tend to focus on visual rather than functional details, which would distract from the primary goal of the early stages of prototyping.\nStatic prototypes with two different fidelity levels - sketched (low-fidelity) and styled (high-fidelity)\nFunctional (Static vs. Interactive)\nShould the prototype be static, or does it have to look fully functional (interactive)? Both versions have pros and cons: static prototypes are simpler and quicker to implement, while interactive ones can be used later for usability testing and user training.\nA high-fidelity Interactive Prototype. (\nSource\n)\nContent (Lorem ipsum vs. real content)\nIn the early stages of prototyping, standard \u201clorem ipsum\u201d content can be useful to avoid distracting the user so they can focus on providing functional feedback instead of commenting on changes in the text.\nHowever, as the prototyping process continues, evaluate the need to replace dummy text with real content so users can get a feel for how it affects the overall design.\nUsing real labels is also an excellent opportunity to test whether your \u201ccopy\u201d is working well or not.\n \u201cCopy\u201d\n is just a fancy term for text labels and information you see on the screen, like calling the \u201cPublish\u201d button \u201cPublish,\u201d \u201cPost,\u201d \u201cSend,\u201d \u201cDone\u201d or something else.\nWhat fidelity levels exist?\nLow-Fidelity:\n Low-Fi methods like \npencil-and-paper\n sketches produce static prototypes with low visual and content fidelity that allow for quick and easy changes. This forces the user to \nfocus on functionality\n and on how they will use the system instead of what it looks like.\nMedium-Fidelity:\n Computer-based tools like Visio produce what we can call medium-fidelity prototypes in the form of \nwireframes and workflows\n. This level of fidelity is used to demonstrate a system\u2019s behavior, to determine if user needs are being met, and to evaluate the user experience.\nHigh-Fidelity:\n High-fidelity prototypes can sometimes be so \nrealistic\n that they are often mistaken for the real product. They are also much more \ntime-consuming\n to produce. Tools like InVision, Sketch, Figma, Adobe XD, Framer, and so on allow non-technical users to create high-fidelity prototypes. Although these cannot be converted into usable code, they can be very handy later for usability testing or user training purposes.\nFrom Low-Fi, to Med-Fi, to Hi-Fi. (\nSource\n)\nHow do you select which fidelity level to prototype on?\nMost of the time, designs are best evaluated by starting with a rough sketch, then moving on to higher fidelity levels depending on the system\u2019s complexity and requirements.\nSometimes, your choice might be guided by client requirements or areas of focus. For example, if you want to evaluate the visual impact of an interface change, you might want to go with a styled design instead of a rough sketch. Or if your solution is message focused, you may decide to use real content instead of standard \u201clorem ipsum\u201d placeholder text.\nHow do you choose a prototyping tool?\nThere is a wide variety of tools available for prototyping depending on your needs and approach. Before choosing a tool, here are a few questions to ask:\nHow much \ntime\n would it take to learn how to use the tool?\nDoes it \nsupport\n prototypes for the needs of my product (web, software applications, mobile apps, some new technology, and so on)?\nDoes the tool allow me to \nshare\n my prototypes with others and gather their feedback?\nHow \neasy\n is it to make changes to the prototype?\nCan I use pre-defined \ntemplates\n and stencils with this tool?\nPaper and pencil, Sketch, Figma, Framer, Photoshop, Illustrator, XD, Origami\u2026\nPrototyping best practices: do\u2019s and don\u2019ts\nDo\u2019s:\nWork with users and stakeholders to get the most \nfeedback\n and engage them in the ownership of the final product\nSet expectations\n early by making sure the users and stakeholders know that prototyping is a way to get answers to specific questions, and does not represent the finished product.\nMake your high-fidelity \nrealistic\n (including response delays) so that users and stakeholders are not disappointed when they compare it with the final product.\nSave templates\n and \nstencils\n to reuse on future projects.\nDon\u2019ts:\nDon\u2019t prototype features that won\u2019t be in the final product\nDon\u2019t be a perfectionist. Good enough is your friend. The goal of rapid prototyping is to give everyone a common ground.\nDon\u2019t prototype everything!\nIf your\u2019re wondering how you should go about testing out your prototypes, read my post on \nUsability Testing\n here:\nThe well-kept secret behind great UX: Usability Testing\nWhether you only have a prototype or a full-fledged product, it\u2019s a really good idea to run monthly usability tests\u2026\nmedium.freecodecamp.org\nThanks for reading this quick guide. This was originally published as part of the \nUX Design course\n on \nCommonlounge\n, a platform that has courses with small bite-sized lessons like these on topics ranging from \nDjango\n to \nMachine Learning\n that deliver the most value for the time you put in.\nYou learn by working on real-world projects and getting feedback from industry mentors. You should check it out \nhere\n!", "Title": "A Beginner\u2019s Guide to Rapid Prototyping", "Space": "Research and Development"}